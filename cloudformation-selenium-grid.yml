AWSTemplateFormatVersion: '2010-09-09'
Description: Selenium Grid Setup on AWS with separate Spot Fleets for Hub and Nodes

Resources:
  SeleniumSecurityGroupName:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Your Security Group Description
      VpcId: vpc-05322bf757c9b2f06
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4444
          ToPort: 4444
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5555
          ToPort: 5555
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4442
          ToPort: 4442
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4443
          ToPort: 4443
          CidrIp: 0.0.0.0/0
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 'install-docker'
            - 'configure-docker'
        install-docker:
          packages:
            yum:
              docker: []
          services:
            sysvinit:
              docker:
                enabled: "true"
                ensureRunning: "true"
                packages:
                  yum:
                    - "docker"
        configure-docker:
          commands:
            '1_add_user_to_docker_group':
              command: 'sudo usermod -a -G docker ec2-user'      

  SeleniumHubSpotFleetRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - spotfleet.amazonaws.com
                - ec2.amazonaws.com 
            Action: 
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: 'SeleniumHubSpotFleetPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 
                  - 'ec2:*'
                  - 'iam:PassRole'
                  - 'ssm:*'
                  - 'cloudformation:*'
                Resource: '*'

  SeleniumHubInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - !Ref SeleniumHubSpotFleetRole              

  SeleniumHubSpotFleet:
    Type: 'AWS::EC2::SpotFleet'
    Properties:
      SpotFleetRequestConfigData:
        IamFleetRole: !GetAtt SeleniumHubSpotFleetRole.Arn
        TargetCapacity: 1
        AllocationStrategy: 'lowestPrice'
        SpotPrice: '0.5'
        LaunchSpecifications:
          - ImageId: ami-b70554c8
            InstanceType: t2.micro
            KeyName: test
            Placement:
              AvailabilityZone: "us-east-1a"
            SecurityGroups:
              - GroupId: !GetAtt SeleniumSecurityGroupName.GroupId
            TagSpecifications:
              - ResourceType: 'instance'
                Tags:
                  - Key: Name
                    Value: !Join ["-", ["selenium-hub-spot", !Select [2, !Split ["/", !Ref AWS::StackId]]]]      
            IamInstanceProfile:
              Arn: !GetAtt SeleniumHubInstanceProfile.Arn  
            UserData:
              Fn::Base64: |
                #!/bin/bash
                STACK_NAME="seleniumgridaws"
                sudo /opt/aws/bin/cfn-init -v --stack $STACK_NAME --resource SeleniumSecurityGroupName --configsets default --region "us-east-1" 

                 # Fetch Public IP of the Hub instance
                HUB_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
                STACK_ARN=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackId' --region "us-east-1" --output text)
                STACK_ID=$(echo "$STACK_ARN" | awk -F'/' '{print $NF}')

                aws ssm put-parameter --name "SeleniumHubPublicIP-$STACK_ID" --type "String" --value "$HUB_IP" --region "us-east-1" --overwrite

                sudo docker run -d -p 4442-4444:4442-4444 --name selenium-hub selenium/hub:latest

  SeleniumNodesSpotFleetRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - spotfleet.amazonaws.com
                - ec2.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: 'SeleniumNodesSpotFleetPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 
                  - 'ec2:*'
                  - 'iam:PassRole'
                  - 'ssm:*'
                  - 'cloudformation:*'
                Resource: '*'

  SeleniumNodesInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - !Ref SeleniumNodesSpotFleetRole              

  SeleniumNodesSpotFleet:
    Type: 'AWS::EC2::SpotFleet'
    Properties:
      SpotFleetRequestConfigData:
        IamFleetRole: !GetAtt SeleniumNodesSpotFleetRole.Arn
        TargetCapacity: 3  # Adjust the number of nodes as needed
        AllocationStrategy: 'lowestPrice'
        SpotPrice: '0.5'
        LaunchSpecifications:
          - ImageId: ami-b70554c8
            InstanceType: t2.micro
            KeyName: test
            Placement:
              AvailabilityZone: "us-east-1a"
            SecurityGroups:
              - GroupId: !GetAtt SeleniumSecurityGroupName.GroupId
            TagSpecifications:
              - ResourceType: 'instance'
                Tags:
                  - Key: Name
                    Value: !Join ["-", ["selenium-node-spot", !Select [2, !Split ["/", !Ref AWS::StackId]]]]     
            IamInstanceProfile:
              Arn: !GetAtt SeleniumNodesInstanceProfile.Arn  
            UserData:
              Fn::Base64: |
                #!/bin/bash
                STACK_NAME="seleniumgridaws"
                sudo /opt/aws/bin/cfn-init -v --stack $STACK_NAME --resource SeleniumSecurityGroupName --configsets default --region "us-east-1"  

                NODE_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                STACK_ARN=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackId' --region "us-east-1" --output text)
                STACK_ID=$(echo "$STACK_ARN" | awk -F'/' '{print $NF}')

                sleep 30

                RECEIVED_HUB_IP=$(aws ssm get-parameter --name "SeleniumHubPublicIP-$STACK_ID" --query "Parameter.Value" --region "us-east-1" --output text)
                FORMATTED_HUB_IP="http://$RECEIVED_HUB_IP:4444"

                sudo docker run -d --name chrome-node -p 5555:5555 \
                --shm-size="2g" \
                -e SE_EVENT_BUS_HOST=$RECEIVED_HUB_IP \
                -e SE_NODE_GRID_URL=$FORMATTED_HUB_IP \
                -e SE_EVENT_BUS_PUBLISH_PORT=4442 \
                -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \
                -e SE_NODE_MAX_INSTANCES=1 \
                -e SE_NODE_MAX_SESSIONS=4 \
                -e SE_NODE_SESSION_TIMEOUT=60 \
                -e SE_VNC_NO_PASSWORD=1 \
                -e SE_NODE_HOST=$NODE_IP \
                selenium/node-chrome:latest

                sleep 30

                aws ssm delete-parameter --name "SeleniumHubPublicIP-$STACK_ID" --region "us-east-1"

Outputs:
  SeleniumHubSpotFleetRoleId:
    Description: The ID of the Spot Fleet Role for Selenium Hub
    Value: !GetAtt SeleniumHubSpotFleetRole.Arn
  SeleniumNodesSpotFleetRoleId:
    Description: The ID of the Spot Fleet Role for Selenium Nodes
    Value: !GetAtt SeleniumNodesSpotFleetRole.Arn